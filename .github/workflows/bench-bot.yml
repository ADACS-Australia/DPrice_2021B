name: bench-bot

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ bench-bot ]
  pull_request:
    branches: [ master ]

env:
  OMP_STACKSIZE: 512M

jobs:

  extract:
    runs-on: ubuntu-latest
    outputs:
      setups: ${{ steps.extract_step.outputs.setups }}

    steps:
      - name: "Checkout benchmarks repo for the directory names"
        uses: actions/checkout@v2
        with:
          repository: phantomSPH/phantom-benchmarks

      - name: "Extract setups from directory"
        id: extract_step
        run: echo ::set-output name=setups::$(printf '%s\n' */ | sort -r | sed 's:/$::' |jq -cnR '[inputs]')

  bench:
    needs: extract
    strategy:
      fail-fast: false
      matrix:
        setup: ${{fromJson(needs.extract.outputs.setups)}}

    runs-on: self-hosted

    steps:

    - name: "Nuke the github workspace before doing anything"
      run: rm -r ${{ github.workspace }} && mkdir ${{ github.workspace }}

    - name: "Clone phantom"
      uses: actions/checkout@v2

    - name: "Grab a copy of the benchmark tests"
      uses: actions/checkout@v2
      with:
        repository: phantomSPH/phantom-benchmarks
        path: phantom-benchmarks
        lfs: true

    - name: "Get number of CPU cores"
      run: echo "::set-output name=count::$(nproc)"
      id: cpu

    - name: "Load previous benchmark data from cache"
      uses: actions/cache@v2
      with:
        path: |
          phantom-benchmarks/${{ matrix.setup }}/*.prev
          phantom-benchmarks/${{ matrix.setup }}/*.txt
        key: ${{ matrix.setup }}-benchmark

    - name: "Set ulimit unlimited"
      run: ulimit -s unlimited

    - name: "Run benchmarks"
      working-directory: phantom-benchmarks
      run: |
        for SYSTEM in "gfortran ifort"; do
          SYSTEM=${SYSTEM} ./run-benchmarks.sh  ${{ matrix.setup }}
        done
      env:
        OMP_NUM_THREADS: ${{ steps.cpu.outputs.count }}
        PHANTOM_DIR: ${{ github.workspace }}
        RETURN_ERR: "yes"

    - name: "Plot benchmarks"
      working-directory: phantom-benchmarks
      run: ./plot-benchmarks.sh
      env:
        PHANTOM_DIR: ${{ github.workspace }}

    - name: "Install SSH Key"
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.RUNNER_PRIVATE_KEY }}
        known_hosts: ${{ secrets.BITBUCKET_KNOWN_HOST }}
        if_key_exists: "replace"

    - name: "Checkout web server repo"
      run: GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa" git clone git@bitbucket.org:phantomsph/phantomsph.bitbucket.org.git

    - name: "Copy plots to webdir"
      run: cp phantom-benchmarks/*.js phantomsph.bitbucket.org/nightly/opt/;

    - name: "Get current date"
      run: echo "::set-output name=now::$(date +'%Y-%m-%dT%H:%M:%S')"
      id: date

    - name: "Plot benchmarks"
      working-directory: phantomsph.bitbucket.org
      run: |
        git config user.email "${{ secrets.BITBUCKET_EMAIL }}"
        git config user.name "${{ secrets.BITBUCKET_NAME }}"
        git add nightly/opt/*
        git commit -m "[benchmarks]: ${{ matrix.setup }} ${{ steps.date.outputs.now }}"
        git push
