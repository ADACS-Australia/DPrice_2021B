name: bench-bot

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ bench-bot ]
  pull_request:
    branches: [ master ]

env:
  OMP_STACKSIZE: 512M

jobs:

  extract:
    runs-on: ubuntu-latest
    outputs:
      setups: ${{ steps.extract_step.outputs.setups }}

    steps:
      - name: "Checkout benchmarks repo for the directory names"
        uses: actions/checkout@v2
        with:
          repository: phantomSPH/phantom-benchmarks

      - name: "Extract setups from directory"
        id: extract_step
        run: echo ::set-output name=setups::$(printf '%s\n' */ | sort -r | sed 's:/$::' |jq -cnR '[inputs]')

  bench:
    needs: extract
    strategy:
      fail-fast: false
      matrix:
        system:
          - ['self-hosted', 'ifort']
          - ['ubuntu-latest', 'gfortran']
        setup: ${{fromJson(needs.extract.outputs.setups)}}

    runs-on: ${{ matrix.system[0] }}

    steps:

    - name: "Nuke the github workspace before doing anything"
      run: rm -r ${{ github.workspace }} && mkdir ${{ github.workspace }}

    - name: "Clone phantom"
      uses: actions/checkout@v2

    - name: "Grab a copy of the benchmark tests"
      uses: actions/checkout@v2
      with:
        repository: phantomSPH/phantom-benchmarks
        path: phantom-benchmarks
        lfs: true

    - name: "Checkout LFS objects"
      working-directory: phantom-benchmarks
      run: git lfs init && git lfs checkout

    - name: "Get number of CPU cores"
      run: echo "::set-output name=count::$(nproc)"
      id: cpu

    - name: "Load previous benchmark data from cache"
      uses: actions/cache@v2
      with:
        path: phantom-benchmarks/${{ matrix.setup }}/*.prev
        key: ${{ runner.os }}-${{ matrix.system[0] }}-${{ matrix.system[1] }}-${{ matrix.setup }}-${{ steps.cpu.outputs.count }}-benchmark

    - name: "Run benchmarks"
      working-directory: phantom-benchmarks
      run: ./run-benchmarks.sh  ${{ matrix.setup }}
      env:
        SYSTEM: ${{ matrix.system[1] }}
        OMP_NUM_THREADS: ${{ steps.cpu.outputs.count }}
        PHANTOM_DIR: ${{ github.workspace }}
        RETURN_ERR: "yes"
